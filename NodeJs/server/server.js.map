{"version":3,"sources":["server/server.ts"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["#!/usr/bin/env node\n'use strict';\nvar http = require(\"http\");\nvar CryptoJS = require(\"crypto-js\");\nvar config = require('config');\nvar ws = require(\"nodejs-websocket\");\nvar colors = require(\"colors\");\nvar os = require(\"os\");\nvar ifaces = os.networkInterfaces();\n\ninterface SUDModel { \n    name: string;  \n}\n\nlet Data = Array<SUDModel>();\n \n\nvar WSServer = ws.createServer(function (conn) {\n    conn.sendText(JSON.stringify(Data));\n}).listen(8001)\n\nfunction AddNewData(data) {\n    Data.push(data);\n    WSServer.connections.forEach(function (conn) {\n        conn.sendText(JSON.stringify(Data));\n    })\n}\n\n\nvar KnownSources =  config.get('KnownSources');\n \nvar port =  7878\nhttp.createServer(function (req, res) {\n\n\n    if (req.method == 'POST' && req.url == '/localexchange/endpoint' && req.headers[\"content-type\"] == \"application/jose\") { \n        if (!req.headers[\"x-seneye\"]) {\n            res.writeHead(400);\n            res.end();\n            return;\n        } \n        let currSource = KnownSources.find(o=>o.source == req.headers[\"x-seneye\"]); \n        if (!currSource) {\n            res.writeHead(404);\n            res.end();\n            return;\n        } \n        req.setEncoding('utf8');\n        var body: string[];\n\n        body = new Array<string>();\n\n        req.on('data', function (chunk) {\n            body.push(chunk);\n        }).on('end', function () {\n            var r: string[];\n            var isValid: boolean = false;\n\n            r = (body.join()).split(\".\");\n            if (r.length == 3) {\n\n                if (r[0] == \"eyJhbGciOiJIUzI1NiJ9\") {\n                    var sign = CryptoJS.HmacSHA256(r[0] + \".\" + r[1],  currSource.secret);\n                    var psign = CryptoJS.enc.Base64.parse(r[2]);\n\n                    if (sign.toString() == psign.toString()) { \n                        isValid = true;\n                        var buf = Buffer.from(r[1], 'base64'); \n                        var d = JSON.parse(buf.toString()); \n                        AddNewData(d.SUD); \n                    } \n                }\n            } \n            if (isValid) {\n                res.writeHead(200);\n            }\n            else {\n                res.writeHead(400);\n            }\n            res.end();\n        })\n    }\n    else {\n        res.writeHead(404);\n        res.end();\n    }\n    \n}).listen(port, '0.0.0.0', function () {\n    var canonicalHost = '127.0.0.1', protocol = 'http://';\n    console.info('Starting up Local API Server, serving :\\r\\n'.red);\n    Object.keys(ifaces).forEach(function (dev) {\n        ifaces[dev].forEach(function (details) {\n            if (details.family === 'IPv4') {\n                console.info(('->> ' + protocol + details.address + ':' + port.toString() + \"/localexchange/endpoint\").green);\n            }\n        });\n    });\n});\nif (process.platform === 'win32') {\n    require('readline').createInterface({\n        input: process.stdin,\n        output: process.stdout\n    }).on('SIGINT', function () {\n        process.emit('SIGINT');\n    });\n}\nprocess.on('SIGINT', function () {\n    console.info('Local API Server stopped.'.red);\n    process.exit();\n});\nprocess.on('SIGTERM', function () {\n    console.info('Local API Server stopped.'.red);\n    process.exit();\n});"],"sourceRoot":"c:\\xseneyex\\LocalDataExchange\\NodeJs"}